name: Building JVM shared library

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 12
      uses: actions/setup-java@v1
      with:
        java-version: 12
    - name: Install system dependencies
      run: |
        sudo apt-get update && sudo apt-get install clang-11 llvm-11 ninja-build libboost-all-dev --fix-missing
    - name: Cache internal dependencies
      id: internal_cache
      uses: actions/cache@v1.1.2
      with:
        path: build/local
        key: ${{ runner.os }}-internal-${{ hashFiles('tools/install-dependencies') }}
    - name: Install internal dependencies
      run: |
        tools/install-dependencies
      env:
        CC: /usr/bin/clang
        CXX: /usr/bin/clang++
      if: steps.internal_cache.outputs.cache-hit != 'true'
    - name: Code generation
      run: |
        tools/generate-files
      env:
        CC: /usr/bin/clang
        CXX: /usr/bin/clang++
    - name: CMake
      run: |
        cmake -H. -Bbuild
      env:
        CC: /usr/bin/clang
        CXX: /usr/bin/clang++
    - name: Build TrustWalletCore
      run: |
        make -Cbuild -j12 TrustWalletCore
      env:
        CC: /usr/bin/clang
        CXX: /usr/bin/clang++
        CK_TIMEOUT_MULTIPLIER: 4
    - name: Build and run C++ sample app
      run: |
        cd samples/cpp
        cmake . -DWALLET_CORE=../../ -DCMAKE_BUILD_TYPE=Debug
        make
        ./sample
      env:
        CC: /usr/bin/clang
        CXX: /usr/bin/clang++
#    - name: Build JNI shared library
#      run: |
#        cd openplatform
#        cmake . -DCMAKE_BUILD_TYPE=Debug
#        make
#    - name: Deploy artifact to Open Key server
#      uses: garygrossgarten/github-action-scp@release
#      with:
#        local: libtrust-core-jvm.dylib
#        remote: /usr/lib/libtrust-core-jvm.dylib
#        host: ${{ secrets.OPEN_KEY_HOST }}
#        privateKey: ${{ secrets.OPEN_KEY_SSH_PRIVATE_KEY }}
